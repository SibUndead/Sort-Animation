#include <stdio.h>
#include <windows.h>
#include <conio.h>
#include <locale.h>

#define SZ 10	//Размер массива который будем сортировать

#define SX 25	//Начало строки по оси х измеренное в количестве элементов (25 знакомест)
#define SY 7	//Устанавливаем позицию курсора на 8 строку

#define FW 3	//Устанавливаем количество места под печатуемый элемент равный 3 (3 знака)

void gotoxy(int x, int y);  //Прототипы функций
void settextattr(WORD c);

void Anim(int A[], int n, int p1, int p2, int m, int l);
void Shell(int A[], int n);

void main()
{
	int A[SZ];					//Массив, который будем сортировать
	for (int i=0; i < SZ; i++)	//Заполняем случайными цифрами от 0 до 50
		A[i] = rand() % 50;
	gotoxy(25, 2);				//Переходим в указанную позицию
	for (int i=0; i < SZ; i++)	//Выводим полученный массив на экран
		printf("%-3d", A[i]);

	Shell(A, SZ);	//Функция сортировки

	printf("\n");
	system("pause");
}

void Anim(int A[], int n, int p1, int p2, int m, int l)	//Функция, отвечающая за анимацию
{
	int i;

	for (i = 0; i < n; i++)
	{
		if (i == p1)	//Если индекс совпадает с индексом перемещаемого элемента
		{
			if (m > 1)	//Если шаг сортировки больше 1
			{
				settextattr(FOREGROUND_RED);	//Устанавливает красный цвет текста
				gotoxy(SX + i*FW, SY - 1);	//"Поднимает" элементы на одну строчку вверх
				printf("%-3d", A[i]);
				gotoxy(SX + i*FW, SY);	//В строке печатает три пробела
				printf("   ");
			}
			else   //Иначе (если шаг сортировки 1)
			{
				settextattr(FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);	//Устанавливает белый цвет текста
				gotoxy(SX + i*FW, SY - 1);	//"Поднимает" элементы на одну строчку вверх
				printf("%-3d", A[i]);
				gotoxy(SX + i*FW, SY);	//В строке печатает три пробела
				printf("   ");
			}
		}
		else   //Иначе (если не совпадает с индексом перемещаемого элемента)
		{
			settextattr(FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);	//Устанавливает белый цвет текста
			gotoxy(SX + i*FW, SY - 1);	//В строке сверху печатает три пробела
			printf("   ");
			gotoxy(SX + i*FW, SY);	//В строке печатает элемент
			printf("%-3d", A[i]);

		}
		if (i == p2)	//Если индекс совпадает с индексом элемента, на место которого встанет перемещаемый
		{
			settextattr(FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);	//Устанавливает белый цвет текста
			gotoxy(SX + i*FW, SY + 1);	//В строке снизу печатает символ-указатель
			printf("^  ");
			if (i == p1)	//Если индекс совпадает с индексом перемещаемого элемента (чтобы не печатал символ-указатель, если перемещение не нужно)
			{
				gotoxy(SX + i*FW, SY + 1);	//В строке снизу печатает три пробела
				printf("   ");
			}
		}
		else  //Иначе (Если не совпадает с индексом элемента, на место которого встанет перемещаемый)
		{
			gotoxy(SX + i*FW, SY + 1);	//В строке снизу печатает три пробела
			printf("   ");
		}
		if (m > 1)	//Только для шага больше 1
		{
			if ((i - l) % m == 0)	//Если индекс элемента попадает в группу сравнения
			{
				settextattr(FOREGROUND_RED);	//Устанавливает красный цвет текста
				gotoxy(SX + i*FW, SY);	//В строке печатает элемент
				printf("%-3d", A[i]);
			}
			if (i == p1)	//Для сравниваемых элементов
			{
				gotoxy(SX + i*FW, SY);	//Печатает в строке три пробела
				printf("   ", A[i]);
			}
		}
	}
}

void Shell(int A[], int n)	//Функция сортировки Шелла
{
	setlocale(LC_ALL, "Rus");	//Устанавливаем русский шрифт	
	int i, j, k, m, count1 = 0, count2 =0;
	for (m = 1; m < n; m *= 2);		//Определение последней степени 2
	for (m /= 2; m != 0; m /= 2)	//Задаётся шаг сортировки
	{
		gotoxy(10, 12);	//Переходим в данную позицию
		settextattr(FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);	//Устанавливает белый цвет текста
		printf("Текущий шаг сортировки = %d", m);	//Выводим текущий шаг сортировки
		for (k = 0; k < m; k++)		//Цикл по группам
		{
			for (i = k + m; i < n; i += m)	//Погружение с заданным шагом и далее вложенная сортировка вставками
			{
				int c = A[i];	//Сохраняем перемещаемый элемент
				count1++;	//Ведём подсчёт количества операций сравнения
				for (j = k; j < i; j += m)	//Поиск места вставки по группе
					if (A[j] > c)	//До первого элемента группы, большего "с"
					{
						Anim(A, SZ, i, j, m, k);	//Вызов функции анимации
						Sleep(2500);	//Задержка в мс
						count2++;	//Ведём подсчёт операций перестановки элементов
						break;
					}
				for (int l = i - m; l >= j; l-=m) //Ведём сдвиг элементов группы вправо
					A[l + m] = A[l];
				A[j] = c;	//Вставка перемещаемого элемента
				Anim(A, SZ, j, j, m, k);	//Вызов функции анимации
				Sleep(2000);	//Задержка в мс
			}
			Anim(A, SZ, -1, -1, m, k);	//Вызов функции анимации для несуществующих индексов (последний два числа опустятся назад)
		}
	}
	gotoxy(40, 12);	//Переход в указанную позицию
	printf("Колличество операций сравнения = %d", count1); //Вывод количества операций сравнения на экран
	gotoxy(40, 13);	//Переход в указанную позицию
	printf("Колличество операций обмена = %d", count2); //Вывод количества операций обмена на экран
}

void gotoxy(int x, int y)	//Функция установки курсора на нужную позицию
{
	HANDLE hs;
	COORD c = { x, y };

	hs = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleCursorPosition(hs, c);
}

void settextattr(WORD attr)	//Функция установки цвета
{
	HANDLE hs;

	hs = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hs, attr);
}